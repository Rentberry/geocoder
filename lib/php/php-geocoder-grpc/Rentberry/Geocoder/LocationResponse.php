<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: geocoder.proto

namespace Rentberry\Geocoder;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>LocationResponse</code>
 */
class LocationResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>repeated .Location locations = 1;</code>
     */
    private $locations;
    /**
     * Generated from protobuf field <code>bool exists = 2;</code>
     */
    protected $exists = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Rentberry\Geocoder\Location[]|\Google\Protobuf\Internal\RepeatedField $locations
     *     @type bool $exists
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Geocoder::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>repeated .Location locations = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLocations()
    {
        return $this->locations;
    }

    /**
     * Generated from protobuf field <code>repeated .Location locations = 1;</code>
     * @param \Rentberry\Geocoder\Location[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLocations($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Rentberry\Geocoder\Location::class);
        $this->locations = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool exists = 2;</code>
     * @return bool
     */
    public function getExists()
    {
        return $this->exists;
    }

    /**
     * Generated from protobuf field <code>bool exists = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setExists($var)
    {
        GPBUtil::checkBool($var);
        $this->exists = $var;

        return $this;
    }

}

